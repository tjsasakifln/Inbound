# =============================================================================
# INBOUND AI LEAD QUALIFIER - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and configure values for your environment
# cp .env.example .env

# =============================================================================
# OPENAI - REQUIRED
# =============================================================================
# OpenAI API key for email scoring with GPT-4o-mini
# Get yours at: https://platform.openai.com/api-keys
OPENAI_API_KEY="sk-your_openai_api_key_here_replace_with_real_key"

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# Secret key for JWT signing (generate a strong key for production)
SECRET_KEY="your_super_secret_jwt_key_change_in_production_minimum_32_chars"

# JWT algorithm (recommended to keep HS256)
ALGORITHM="HS256"

# Access token expiration time in minutes
ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# POSTGRESQL DATABASE
# =============================================================================
# PostgreSQL connection URL
# Format: postgresql+psycopg://username:password@host:port/database
DATABASE_URL="postgresql+psycopg://user:pass@db:5432/inbound"

# Individual PostgreSQL settings (used by docker-compose)
POSTGRES_DB="inbound"
POSTGRES_USER="user"
POSTGRES_PASSWORD="pass"
POSTGRES_HOST="db"
POSTGRES_PORT="5432"

# =============================================================================
# REDIS & CELERY
# =============================================================================
# Redis broker URL for Celery
CELERY_BROKER_URL="redis://redis:6379/0"

# Celery result backend URL
CELERY_RESULT_BACKEND="redis://redis:6379/0"

# Redis host and port
REDIS_HOST="redis"
REDIS_PORT="6379"
REDIS_DB="0"

# =============================================================================
# GOOGLE OAUTH & GMAIL
# =============================================================================
# Google credentials file (JSON downloaded from Google Cloud Console)
# Get yours at: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_SECRETS_FILE="client_secrets.json"

# Google OAuth client ID
GOOGLE_CLIENT_ID="your_google_client_id.apps.googleusercontent.com"

# Google OAuth client secret
GOOGLE_CLIENT_SECRET="your_google_client_secret"

# OAuth redirect URI (must match the one configured in Google)
GOOGLE_REDIRECT_URI="http://localhost:8000/auth/google/callback"

# Gmail scopes (space separated)
GOOGLE_SCOPES="https://www.googleapis.com/auth/gmail.readonly https://www.googleapis.com/auth/userinfo.email"

# =============================================================================
# MICROSOFT GRAPH (OUTLOOK/OFFICE 365)
# =============================================================================
# Azure AD registered application ID
MSGRAPH_CLIENT_ID="your_azure_app_client_id"

# Azure AD application secret
MSGRAPH_CLIENT_SECRET="your_azure_app_client_secret"

# Azure AD tenant ID
MSGRAPH_TENANT_ID="your_azure_tenant_id"

# Microsoft Graph redirect URI
MSGRAPH_REDIRECT_URI="http://localhost:8000/auth/microsoft/callback"

# =============================================================================
# FRONTEND & API
# =============================================================================
# API URL for frontend
VITE_API_URL="http://localhost:8000"

# Frontend port (Vite)
VITE_PORT="5173"

# Frontend host
VITE_HOST="0.0.0.0"

# =============================================================================
# OBSERVABILITY & MONITORING
# =============================================================================
# OpenTelemetry Collector endpoint (optional)
OTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:4317"

# Service name for traces
OTEL_SERVICE_NAME="inbound-lead-qualifier"

# Environment (development, staging, production)
ENVIRONMENT="development"

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL="INFO"

# Enable distributed tracing (true/false)
ENABLE_TRACING="true"

# Enable Prometheus metrics (true/false)
ENABLE_METRICS="true"

# =============================================================================
# RATE LIMITING & PERFORMANCE
# =============================================================================
# Login requests limit per minute
AUTH_RATE_LIMIT_PER_MINUTE="5"

# SSE requests limit per minute
SSE_RATE_LIMIT_PER_MINUTE="100"

# General API requests limit per minute
API_RATE_LIMIT_PER_MINUTE="1000"

# Cache TTL in seconds
CACHE_TTL_SECONDS="60"

# =============================================================================
# CELERY WORKER CONFIGURATION
# =============================================================================
# Number of Celery workers (auto = number of CPUs)
CELERY_WORKERS="auto"

# Celery log level
CELERY_LOG_LEVEL="info"

# Celery pool (prefork, eventlet, gevent)
CELERY_POOL="prefork"

# Celery concurrency
CELERY_CONCURRENCY="4"

# =============================================================================
# EMAIL PROCESSING CONFIGURATION
# =============================================================================
# Email polling interval in seconds
EMAIL_POLLING_INTERVAL="60"

# Batch size for email processing
EMAIL_BATCH_SIZE="10"

# Fuzzy matching threshold for deduplication (0-100)
DUPLICATE_SENDER_THRESHOLD="80"
DUPLICATE_SUBJECT_THRESHOLD="70"

# =============================================================================
# AI MODEL CONFIGURATION
# =============================================================================
# OpenAI model for scoring
OPENAI_MODEL="gpt-4o-mini"

# Generation temperature (0.0 - 2.0)
OPENAI_TEMPERATURE="0.0"

# OpenAI request timeout in seconds
OPENAI_TIMEOUT="30"

# Maximum tokens for response
OPENAI_MAX_TOKENS="150"

# =============================================================================
# DEVELOPMENT & DEBUG
# =============================================================================
# Debug mode (true/false)
DEBUG="true"

# Auto-reload on changes (true/false)
AUTO_RELOAD="true"

# Show SQL queries in logs (true/false)
ECHO_SQL="false"

# Seed for test data (optional)
TEST_DATA_SEED="12345"

# =============================================================================
# DOCKER & NETWORKING
# =============================================================================
# Backend port
BACKEND_PORT="8000"

# Frontend port
FRONTEND_PORT="5173"

# External Redis port
REDIS_PORT_EXTERNAL="6379"

# External PostgreSQL port
POSTGRES_PORT_EXTERNAL="5432"

# Docker Compose project name
COMPOSE_PROJECT_NAME="inbound-lead-qualifier"

# =============================================================================
# BACKUP & MAINTENANCE
# =============================================================================
# Directory for backups
BACKUP_DIR="./backups"

# Backup retention in days
BACKUP_RETENTION_DAYS="30"

# Enable automatic backup (true/false)
AUTO_BACKUP="false"

# =============================================================================
# NOTIFICATIONS (OPTIONAL)
# =============================================================================
# Webhook for qualified lead notifications
WEBHOOK_URL=""

# Email for system alerts
ALERT_EMAIL=""

# Slack webhook for notifications
SLACK_WEBHOOK_URL=""

# =============================================================================
# PRODUCTION CONFIGURATION EXAMPLE
# =============================================================================
# For production, uncomment and adjust the variables below:

# DEBUG="false"
# AUTO_RELOAD="false"
# ENVIRONMENT="production"
# LOG_LEVEL="WARNING"
# SECRET_KEY="your_super_secure_secret_key_32_chars_minimum_for_production_use"
# DATABASE_URL="postgresql+psycopg://prod_user:secure_password@db.example.com:5432/inbound_prod"
# CELERY_BROKER_URL="redis://redis.example.com:6379/0"
# VITE_API_URL="https://api.yourdomain.com"
# GOOGLE_REDIRECT_URI="https://yourdomain.com/auth/google/callback"
# ENABLE_TRACING="true"
# CELERY_LOG_LEVEL="warning"

# =============================================================================
# IMPORTANT NOTES
# =============================================================================
# 1. NEVER commit the .env file to version control
# 2. Use strong passwords in production
# 3. Configure HTTPS in production
# 4. Monitor logs in production
# 5. Set up regular database backups
# 6. Use a secret manager in production (AWS Secrets Manager, etc.)
# 7. Configure alerts for critical failures
# 8. Test all configurations before going to production
# 9. Generate SECRET_KEY with: openssl rand -hex 32
# 10. Regularly rotate API keys and secrets